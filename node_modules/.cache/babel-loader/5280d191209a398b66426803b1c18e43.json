{"ast":null,"code":"var _jsxFileName = \"D:\\\\deadline\\\\api-request\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { AiFillDelete, AiOutlineEdit, AiOutlineCloseSquare } from \"react-icons/ai\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const baseUrl = \"https://reqres.in/api/users\";\n  const [userList, setUserList] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [first_name, setFirst_Name] = useState(\"\");\n  const [last_name, setLast_Name] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false); // const [editEmail, setEditEmail] = useState(\"\");\n  // const [editFname, setEditFname] = useState(\"\");\n  // const [editLname, setEditLname] = useState(\"\");\n  // const [editAvatar, setEditAvatar] = useState(\"\");\n\n  const [editUser, setEditUser] = useState(\"\");\n  useEffect(() => {\n    axios.get(`${baseUrl}`).then(response => {\n      setUserList(response.data.data);\n    });\n  }, [baseUrl]); // console.log(userList);\n\n  const createUser = async e => {\n    e.preventDefault();\n\n    if (!email || !first_name || !last_name || !avatar) {\n      alert(\"Need to enter enough information\");\n      return;\n    }\n\n    const postData = {\n      id: userList.length + 1,\n      email,\n      first_name,\n      last_name,\n      avatar\n    };\n    await axios.post(baseUrl, postData).then(result => {\n      setUserList([...userList, result.data]); // console.log(userList);\n      // console.log(result.data.id);\n    });\n  };\n\n  const handleEdit = async id => {\n    const updatedUser = {\n      id,\n      email: editUser.email,\n      fname: editUser.first_name,\n      lname: editUser.last_name,\n      avatar: editUser.avatar\n    };\n\n    try {\n      const response = await axios.put(`${baseUrl}/${id}`, updatedUser);\n      setUserList(userList.map(item => item.id === id ? { ...response.data\n      } : item));\n      setEditUser(\"\"); // setEditFname(\"\");\n      // setEditLname(\"\");\n      // setEditAvatar(\"\");\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  }; // const user = userList.find((user) => user.id.toString() === userList.id);\n  // useEffect(() => {\n  //   if (user) {\n  //     setEditUser();\n  //   }\n  // }, [userList, setEditFname]);\n\n\n  const deleteData = async id => {\n    try {\n      await axios.delete(baseUrl, `/${id}`);\n      const userChange = userList.filter(user => user.id !== id);\n      setUserList(userChange);\n      console.log(userChange);\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n\n  const togglePopup = user => {\n    setIsOpen(!isOpen);\n    console.log(user);\n    setEditUser(user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userList\",\n      children: userList === null || userList === void 0 ? void 0 : userList.map(user => {\n        const {\n          id,\n          email,\n          first_name,\n          last_name,\n          avatar\n        } = user;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatar,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [first_name, \" \", last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => deleteData(id),\n              children: /*#__PURE__*/_jsxDEV(AiFillDelete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => togglePopup(user),\n              children: /*#__PURE__*/_jsxDEV(AiOutlineEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"userForm\",\n          onSubmit: () => handleEdit(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Edit the user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"close\",\n              onClick: togglePopup,\n              children: /*#__PURE__*/_jsxDEV(AiOutlineCloseSquare, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fname\",\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"editfname\",\n              name: \"editfname\",\n              value: editUser.first_name,\n              onChange: e => setEditUser(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"lname\",\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"editlname\",\n              name: \"editlname\",\n              value: editUser.last_name,\n              onChange: e => setEditUser(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"editemail\",\n              name: \"editemail\",\n              value: editUser.email,\n              onChange: e => setEditUser(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"avatar\",\n              children: \"Avatar URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"editavatar\",\n              name: \"editavatar\",\n              value: editUser.avatar,\n              onChange: e => setEditUser(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addUser\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"userForm\",\n        onSubmit: createUser,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fname\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"fname\",\n            name: \"fname\",\n            value: first_name,\n            onChange: e => setFirst_Name(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lname\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"lname\",\n            name: \"lname\",\n            value: last_name,\n            onChange: e => setLast_Name(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"avatar\",\n            children: \"Avatar URL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"avatar\",\n            name: \"avatar\",\n            value: avatar,\n            onChange: e => setAvatar(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+PbZh1b867hHMVub9i7wDcNYfBw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/deadline/api-request/src/App.js"],"names":["React","useEffect","useState","axios","AiFillDelete","AiOutlineEdit","AiOutlineCloseSquare","App","baseUrl","userList","setUserList","email","setEmail","first_name","setFirst_Name","last_name","setLast_Name","avatar","setAvatar","isOpen","setIsOpen","editUser","setEditUser","get","then","response","data","createUser","e","preventDefault","alert","postData","id","length","post","result","handleEdit","updatedUser","fname","lname","put","map","item","err","console","log","message","deleteData","delete","userChange","filter","user","togglePopup","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  AiFillDelete,\n  AiOutlineEdit,\n  AiOutlineCloseSquare,\n} from \"react-icons/ai\";\nimport \"./App.css\";\n\nconst App = () => {\n  const baseUrl = \"https://reqres.in/api/users\";\n  const [userList, setUserList] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [first_name, setFirst_Name] = useState(\"\");\n  const [last_name, setLast_Name] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [isOpen, setIsOpen] = useState(false);\n  // const [editEmail, setEditEmail] = useState(\"\");\n  // const [editFname, setEditFname] = useState(\"\");\n  // const [editLname, setEditLname] = useState(\"\");\n  // const [editAvatar, setEditAvatar] = useState(\"\");\n  const [editUser, setEditUser] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(`${baseUrl}`).then((response) => {\n      setUserList(response.data.data);\n    });\n  }, [baseUrl]);\n\n  // console.log(userList);\n\n  const createUser = async (e) => {\n    e.preventDefault();\n    if (!email || !first_name || !last_name || !avatar) {\n      alert(\"Need to enter enough information\");\n      return;\n    }\n    const postData = {\n      id: userList.length + 1,\n      email,\n      first_name,\n      last_name,\n      avatar,\n    };\n    await axios.post(baseUrl, postData).then((result) => {\n      setUserList([...userList, result.data]);\n      // console.log(userList);\n      // console.log(result.data.id);\n    });\n  };\n\n  const handleEdit = async (id) => {\n    const updatedUser = {\n      id,\n      email: editUser.email,\n      fname: editUser.first_name,\n      lname: editUser.last_name,\n      avatar: editUser.avatar,\n    };\n    try {\n      const response = await axios.put(`${baseUrl}/${id}`, updatedUser);\n      setUserList(\n        userList.map((item) => (item.id === id ? { ...response.data } : item))\n      );\n      setEditUser(\"\");\n      // setEditFname(\"\");\n      // setEditLname(\"\");\n      // setEditAvatar(\"\");\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n\n  // const user = userList.find((user) => user.id.toString() === userList.id);\n\n  // useEffect(() => {\n  //   if (user) {\n  //     setEditUser();\n  //   }\n  // }, [userList, setEditFname]);\n\n  const deleteData = async (id) => {\n    try {\n      await axios.delete(baseUrl, `/${id}`);\n      const userChange = userList.filter((user) => user.id !== id);\n      setUserList(userChange);\n      console.log(userChange);\n    } catch (err) {\n      console.log(`Error: ${err.message}`);\n    }\n  };\n\n  const togglePopup = (user) => {\n    setIsOpen(!isOpen);\n    console.log(user);\n    setEditUser(user);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"userList\">\n        {userList?.map((user) => {\n          const { id, email, first_name, last_name, avatar } = user;\n          return (\n            <div className=\"user\" key={id}>\n              <div>\n                <img src={avatar} alt=\"\" />\n              </div>\n              <div className=\"info\">\n                <h2>\n                  {first_name} {last_name}\n                </h2>\n                <p>{email}</p>\n              </div>\n              <div className=\"icons\">\n                <button className=\"btn\" onClick={() => deleteData(id)}>\n                  <AiFillDelete />\n                </button>\n                <button className=\"btn\" onClick={() => togglePopup(user)}>\n                  <AiOutlineEdit />\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {isOpen && (\n        <div className=\"popup-box\">\n          <div className=\"box\">\n            <form className=\"userForm\" onSubmit={() => handleEdit()}>\n              <div className=\"form-title\">\n                <h2>Edit the user</h2>\n                <button className=\"close\" onClick={togglePopup}>\n                  <AiOutlineCloseSquare />\n                </button>\n              </div>\n              <div className=\"form-text\">\n                <label htmlFor=\"fname\">First Name</label>\n                <input\n                  type=\"text\"\n                  id=\"editfname\"\n                  name=\"editfname\"\n                  value={editUser.first_name}\n                  onChange={(e) => setEditUser(e.target.value)}\n                />\n              </div>\n              <div className=\"form-text\">\n                <label htmlFor=\"lname\">Last Name</label>\n                <input\n                  type=\"text\"\n                  id=\"editlname\"\n                  name=\"editlname\"\n                  value={editUser.last_name}\n                  onChange={(e) => setEditUser(e.target.value)}\n                />\n              </div>\n              <div className=\"form-text\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  id=\"editemail\"\n                  name=\"editemail\"\n                  value={editUser.email}\n                  onChange={(e) => setEditUser(e.target.value)}\n                />\n              </div>\n              <div className=\"form-text\">\n                <label htmlFor=\"avatar\">Avatar URL</label>\n                <input\n                  type=\"text\"\n                  id=\"editavatar\"\n                  name=\"editavatar\"\n                  value={editUser.avatar}\n                  onChange={(e) => setEditUser(e.target.value)}\n                />\n              </div>\n              <button className=\"btn\">Update</button>\n            </form>\n          </div>\n        </div>\n      )}\n\n      <div className=\"addUser\">\n        <form className=\"userForm\" onSubmit={createUser}>\n          <h2>Add User</h2>\n          <div className=\"form-text\">\n            <label htmlFor=\"fname\">First Name</label>\n            <input\n              type=\"text\"\n              id=\"fname\"\n              name=\"fname\"\n              value={first_name}\n              onChange={(e) => setFirst_Name(e.target.value)}\n            />\n          </div>\n          <div className=\"form-text\">\n            <label htmlFor=\"lname\">Last Name</label>\n            <input\n              type=\"text\"\n              id=\"lname\"\n              name=\"lname\"\n              value={last_name}\n              onChange={(e) => setLast_Name(e.target.value)}\n            />\n          </div>\n          <div className=\"form-text\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"text\"\n              id=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </div>\n          <div className=\"form-text\">\n            <label htmlFor=\"avatar\">Avatar URL</label>\n            <input\n              type=\"text\"\n              id=\"avatar\"\n              name=\"avatar\"\n              value={avatar}\n              onChange={(e) => setAvatar(e.target.value)}\n            />\n          </div>\n          <button className=\"btn\">Add</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}